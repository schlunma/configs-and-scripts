###############################################################################
# Configuration file for ZSH
#
# Copyright (c) 2018 Manuel Schlund <schlunma@gmail.com>
# Licensed under the GNU General Public License v3.0 (or later).
###############################################################################



###############################################################################
# Do not load this file for non-interactive shells
###############################################################################
[[ $- == *i* ]] || return
###############################################################################



###############################################################################
# Get zsh major version
###############################################################################
ZVERSION=(${(s/./)ZSH_VERSION})
ZSH_MAJORVERSION=$ZVERSION[1]
###############################################################################



###############################################################################
# Lines configured by zsh-newuser-install
###############################################################################
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory autocd beep nomatch notify
unsetopt extendedglob
bindkey -v
###############################################################################



###############################################################################
# Lines configured by compinstall
###############################################################################
zstyle :compinstall filename "$HOME/.zshrc"
autoload -Uz compinit
compinit
###############################################################################



###############################################################################
# Basic settings
###############################################################################
KEYTIMEOUT=1                            # Timeout in ZLE mode
autoload -Uz compinit && compinit       # Autocomplete
zstyle ':completion:*' menu select
###############################################################################



###############################################################################
# Prompt
###############################################################################
# Colors
cyan='%F{blue}%B'
green='%F{green}%B'
red='%F{red}%B'
orange='%F{white}%B'
white='%F{fg}%B'
gray='%F{fg}'
res='%f%b'
autoload -Uz colors && colors
if [[ ZSH_MAJORVERSION -ge 5 ]]; then
    PROMPT="$white%*$res $red%n$res$gray@$res$cyan%m$res \
$orange%~ "$'\n'"       > $res"
else
    PROMPT="%* %{$fg_bold[red]%}%n%{$reset_color%}@%{$fg_bold[cyan]%}%m \
%{$fg_bold[yellow]%}%~ "$'\n'"       > %{$reset_color%}%{$fg_bold[green]%}"
    POSTEDIT=$'\e[0m'
fi

# Git (only possible when zsh > v5.0.0)
if [[ ZSH_MAJORVERSION -ge 5 ]]; then
    setopt prompt_subst
    autoload -Uz vcs_info
    zstyle ':vcs_info:*' stagedstr 'M'
    zstyle ':vcs_info:*' unstagedstr 'M'
    zstyle ':vcs_info:*' check-for-changes true
    zstyle ':vcs_info:*' formats "$white [%f$green%b%f$white]%f \
$green%c%f$orange%u%f"
    zstyle ':vcs_info:*' actionformats "$white [%f$green%b%f$white|%f\
$red%a%f$white]%f"
    zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
    zstyle ':vcs_info:*' enable git
    +vi-git-untracked() {
        if [[ $("git" rev-parse --is-inside-work-tree 2>/dev/null) == \
            'true' ]] && [[ $("git" ls-files --other --directory \
            --exclude-standard | sed q | wc -l | tr -d ' ') == 1 ]] ; then
                hook_com[unstaged]+="$red??%f"
        fi
    }
    precmd () { vcs_info }
    RPROMPT='${vcs_info_msg_0_}'
fi
###############################################################################



###############################################################################
# Keybindings (vim-like configuration)
###############################################################################
bindkey '^P'    up-history
bindkey '^N'    down-history
bindkey '^?'    backward-delete-char
bindkey '^h'    backward-delete-char
bindkey '^w'    backward-kill-word
bindkey '^r'    history-incremental-search-backward
bindkey '^[[3~' delete-char
bindkey '^[[H'  beginning-of-line
bindkey '^[[1~' beginning-of-line
bindkey '^[[F'  end-of-line
bindkey '^[[4~' end-of-line
###############################################################################



###############################################################################
# Aliases
###############################################################################
alias cd..='cd ..'
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias sq='squeue -l -u $USER -o "%.18i %.17j %.10P %.8u %.8a %.8T %.8M \
%.12l %.6D  %R"'
if command -v 'checkssh' &>/dev/null; then
    alias git='checkssh; git'
    alias rsync='checkssh; rsync -aP'
    alias ssh='checkssh 1; ssh'
else
    alias rsync='rsync -aP'
fi
###############################################################################



###############################################################################
# Export Anaconda PATH (due to bug not possible in .zprofile or .zshenv)
###############################################################################
ANACONDA='anaconda3/bin'
[[ ":$PATH:" =~ ":$HOME/$ANACONDA:" ]] || export PATH="$HOME/$ANACONDA:$PATH"
###############################################################################



###############################################################################
# Plugins (load only when zsh > v5.0.0)
###############################################################################
# Load plugins
if [[ ZSH_MAJORVERSION -ge 5 ]]; then
    ZPLUGINS="$HOME/.zplugins"
    source $ZPLUGINS/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    source $ZPLUGINS/zsh-autosuggestions/zsh-autosuggestions.zsh

    # Plugin settings
    bindkey '^ ' autosuggest-accept
    ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
    ZSH_HIGHLIGHT_STYLES[default]="fg=fg,bold"
    ZSH_HIGHLIGHT_STYLES[unknown-token]="fg=red,bold"
    ZSH_HIGHLIGHT_STYLES[reserved-word]="fg=yellow,bold"
    ZSH_HIGHLIGHT_STYLES[arg0]="fg=magenta,bold"
    ZSH_HIGHLIGHT_STYLES[alias]="fg=green,bold"
    ZSH_HIGHLIGHT_STYLES[suffix-alias]="fg=green,bold"
    ZSH_HIGHLIGHT_STYLES[builtin]="fg=green,bold"
    ZSH_HIGHLIGHT_STYLES[function]="fg=green"
    ZSH_HIGHLIGHT_STYLES[command]="fg=green,bold"
    ZSH_HIGHLIGHT_STYLES[precommand]="fg=green,bold,underline"
    ZSH_HIGHLIGHT_STYLES[commandseparator]="fg=yellow,bold"
    ZSH_HIGHLIGHT_STYLES[redirection]="fg=yellow,bold"
    ZSH_HIGHLIGHT_STYLES[hashed-command]="fg=green,bold"
    ZSH_HIGHLIGHT_STYLES[path]="fg=fg,bold,underline"
    ZSH_HIGHLIGHT_STYLES[globbing]="fg=yellow,bold"
    ZSH_HIGHLIGHT_STYLES[history-expansion]="fg=magenta,bold"
    ZSH_HIGHLIGHT_STYLES[single-hyphen-option]="fg=cyan,bold"
    ZSH_HIGHLIGHT_STYLES[double-hyphen-option]="fg=cyan,bold"
    ZSH_HIGHLIGHT_STYLES[back-quoted-argument]="fg=magenta,bold"
    ZSH_HIGHLIGHT_STYLES[single-quoted-argument]="fg=yellow"
    ZSH_HIGHLIGHT_STYLES[double-quoted-argument]="fg=yellow"
    ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]="fg=yellow"
    ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]="fg=cyan"
    ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]="fg=cyan"
    ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]="fg=cyan"
    ZSH_HIGHLIGHT_STYLES[rc-quote]="fg=cyan"
    ZSH_HIGHLIGHT_STYLES[assign]="fg=cyan,bold"
fi
###############################################################################
